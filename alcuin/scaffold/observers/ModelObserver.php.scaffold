<?php

namespace App\Observers;

use Illuminate\Database\Eloquent\Model;

trait ModelObserver
{
    private function delete_tree(Model $model) {
        $className = get_class($model);
        $relationships = $className::getSingleton()->RELATIONSHIPS;

        foreach (array_keys($relationships['has_many']) as $relationship) {
            $children = $model->{$relationship};
            foreach($children as $child) {
                $this->delete_tree($child);
            }
        }
        $model->delete();
    }
    /**
     * Listen to the User deleting event.
     *
     * @param  User  $user
     * @return void
     */
    public function deleting (Model $model)
    {
        $className = get_class($model);
        $relationships = $className::getSingleton()->RELATIONSHIPS;
        foreach (array_keys($relationships['belongs_to_and_has_many']) as $relationship) {
            $model->{$relationship}()->detach();
        }

        foreach (array_keys($relationships['has_many']) as $relationship) {
            $children = $model->{$relationship};
            foreach($children as $child) {
                $this->delete_tree($child);
            }
        }
    }
}